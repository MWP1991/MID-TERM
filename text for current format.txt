/**
 *   @author Page, Marshall (mpage@student.ncmich.edu)
 *   @version 0.0.1
 *   @summary Project 3 || created: 10.14.2018
 *   @todo
 */

"use strict";
const PROMPT = require('readline-sync');

const PIN_NUMBER = 2525, CHECKING_BALANCE = 1000, SAVINGS_BALANCE = 1000;
let continueResponse;
let counter, pinNumber, customerName, transferFunds, withdrawFunds, depositFunds, totalCheckingBalance, totalSavingsBalance;

function main() {
    setContinueResponse();
    while (continueResponse === 1) {
        setPin();
        setCustomerName();
        setTransferFunds();
        setWithdrawFunds();
        setDepositFunds();
        setCounter();
        setTotalCheckingBalance();
        setTotalSavingsBalance();
        setContinueResponse();
    }
    printTotalBalance();
    printGoodbye();
}

main();

function setContinueResponse() {
    if (continueResponse === 1 || continueResponse === 0) {
        continueResponse = Number(PROMPT.question(`\nDo you want to continue? [0=no, 1=yes]: `));
        while (continueResponse !== 0 && continueResponse !== 1) {
            console.log(`${continueResponse} is an incorrect value. Please try again.`);
            continueResponse = Number(PROMPT.question(`\nDo you want to continue? [0=no, 1=yes]: `));
        }
    } else {
        continueResponse = 1;
    }
}

function setCounter() {
    if (counter != null) {
        counter++;
    } else {
        counter = 1;
    }
}

/**
 * @method
 * @desc customerName mutator
 * @returns {null}
 */
function setCustomerName() {
    customerName = PROMPT.question(`\nPlease enter cardholder name: `);
}

/**
 * @method
 * @desc customerPin mutator
 * @returns {null}
 */
function setPin() {
    pinNumber = Number(PROMPT.question('\nPlease enter your PIN number: '));
    if (pinNumber !== PIN_NUMBER)
        console.log(`I'm Sorry, the PIN you have entered is incorrect. Please try again.`);
    return setPin();
}

function setTotalSavingsBalance() {
    SAVINGS_BALANCE = 1000.00;
}

function setTotalCheckingBalance() {
    CHECKING_BALANCE = 1000.00;
}

function printTotalBal() {
    console.log(`The current balance for your accounts is: Checking $${checkingBal}, Savings $${savingsBal}. Have a good day!`)
}

function setAmount() {
    amount = number(PROMPT.question(`\nWhat is the amount you would wish to add/subtract? `));
}

function setTransactionType() {
    transactionType = Number(PROMPT.question(`\nWhat action would you like to take? 1 = Add/Remove funds to checking, 2 = Add/remove funds to savings, 3 = Move funds from checking to savings, 4 = Move funds from savings to checking, 5 = Quit.`));
    switch (transactionType) {
        case 1: checkingBal = Number(PROMPT.question(`\nWhat funds would you like to add or subtract from this account? If taking funds please use "-" before your amount.`));
            break;
        case 2: savingsBal = Number(PROMPT.question(`\nWhat funds would you like to add or subtract from this account? If taking funds please use "-" before your amount.`));
            break;
        case 3:
            break;
        case 4:
            break;
        case 5: return continueResponse;
    }
}

/*
Write a program that simulates an automatic teller machine (ATM).
Assume an initial balance of $1,000.00 in both a checking and savings
account. A user may withdraw, deposit, transfer funds, or inquire as
many times as she desires. The program will only end when the user
chooses to quit, otherwise the program should loop and prompt the
users for actions.
For security, include an authentication routine that will prompt the user
to enter a card holder name, number, and pin. The user is only allowed
three attempts to enter the correct pin which should authenticate to
the correct card number (you should have card number/pin combos
already in your program that the user tests against. After the third
attempt the program should terminate.
 */